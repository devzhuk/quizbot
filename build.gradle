import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
	id 'org.liquibase.gradle' version '2.2.0'

}

group = 'ru.zhukov'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.telegram:telegrambots:6.9.0'
	implementation 'org.jetbrains.exposed:exposed-core:0.46.0'
	implementation 'org.jetbrains.exposed:exposed-dao:0.46.0'
	implementation 'org.postgresql:postgresql:42.7.0'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib'
	liquibaseRuntime 'org.liquibase:liquibase-core:4.19.0'
}

liquibase {
	activities {
		main {
			changeLogFile '/resources/db/migration/initDB.xml' // Путь к вашему Liquibase-скрипту
			url 'jdbc:postgresql://localhost:5432/postgres'
			username ''
			password ''
			driver 'org.postgresql.Driver'
//			liquibaseCommand {
//				defaultSchemaName = 'public'
//			}
		}
	}
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.withType(Test) {
	useJUnitPlatform()
}

// Создайте задачу Gradle для запуска Liquibase
task runLiquibase(type: org.liquibase.gradle.LiquibaseTask) {
	dependsOn assemble
	doLast {
		liquibase {
			activities {
				main {
					changeLogFile '/resources/db/migration/initDB.xml' // Путь к вашему Liquibase-скрипту
					url 'jdbc:postgresql://localhost:5432/postgres'
					username ''
					password ''
					driver 'org.postgresql.Driver'
					properties(
							'liquibase.command.defaultSchemaName': 'public'
					)
//					liquibaseCommand {
//						defaultSchemaName = 'public'
//					}
				}
			}
		}.run()
	}
}
